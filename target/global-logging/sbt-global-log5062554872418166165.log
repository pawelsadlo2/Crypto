[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 17.0.2)
[debug]       Load.loadUnit: plugins took 33.3689ms
[debug]       Load.loadUnit: defsScala took 0.0132ms
[debug] [Loading] Scanning directory C:\Users\pawel\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\pawel\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 23.4737 ms
[debug]           Load.resolveProject(global-plugins) took 1.5217ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\pawel\.sbt\1.0\plugins, plugins: List(<none>))) took 25.8552ms
[debug] [Loading] Done in C:\Users\pawel\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 27.9143ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.0204ms
[debug]     Load.loadUnit(file:/C:/Users/pawel/.sbt/1.0/plugins/, ...) took 63.3314ms
[debug]   Load.apply: load took 65.4489ms
[debug]   Load.apply: resolveProjects took 0.1274ms
[debug]   Load.apply: finalTransforms took 8.3844ms
[debug]   Load.apply: config.delegates took 0.4873ms
[debug]   Load.apply: Def.make(settings)... took 80.3922ms
[debug]   Load.apply: structureIndex took 29.2556ms
[debug]   Load.apply: mkStreams took 0.0059ms
[info] loading global plugins from C:\Users\pawel\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 557.5258ms
[debug]           Load.loadUnit: plugins took 24.2326ms
[debug]           Load.loadUnit: defsScala took 0.0059ms
[debug] [Loading] Scanning directory C:\Users\pawel\Desktop\SCALA\Crypto\project
[debug]             Load.loadUnit: mkEval took 0.3824ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\pawel\Desktop\SCALA\Crypto\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 17.9459 ms
[info] loading settings for project crypto-build from plugins.sbt,idea7.sbt ...
[debug]               Load.resolveProject(crypto-build) took 2.9466ms
[debug]             Load.loadTransitive: finalizeProject(Project(id crypto-build, base: C:\Users\pawel\Desktop\SCALA\Crypto\project, plugins: List(<none>))) took 21.7431ms
[debug] [Loading] Done in C:\Users\pawel\Desktop\SCALA\Crypto\project, returning: (crypto-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 60.0511ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.9786ms
[debug]         Load.loadUnit(file:/C:/Users/pawel/Desktop/SCALA/Crypto/project/, ...) took 93.5987ms
[debug]       Load.apply: load took 95.556ms
[debug]       Load.apply: resolveProjects took 0.1857ms
[debug]       Load.apply: finalTransforms took 9.7511ms
[debug]       Load.apply: config.delegates took 0.4945ms
[debug]       Load.apply: Def.make(settings)... took 72.9561ms
[debug]       Load.apply: structureIndex took 31.7456ms
[debug]       Load.apply: mkStreams took 0.0055ms
[info] loading project definition from C:\Users\pawel\Desktop\SCALA\Crypto\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 450.9585ms
[debug]     Load.loadUnit: defsScala took 0.0035ms
[debug] [Loading] Scanning directory C:\Users\pawel\Desktop\SCALA\Crypto
[debug]       Load.loadUnit: mkEval took 0.6061ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtide.ConfigPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.4535 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 45.5003ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\pawel\Desktop\SCALA\Crypto, plugins: List(<none>))) took 48.6518ms
[debug] [Loading] Done in C:\Users\pawel\Desktop\SCALA\Crypto, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1760.2113ms
[debug]     Load.loadUnit: cleanEvalClasses took 21.1194ms
[debug]   Load.loadUnit(file:/C:/Users/pawel/Desktop/SCALA/Crypto/, ...) took 2233.6662ms
[debug] Load.apply: load took 2235.8579ms
[debug] Load.apply: resolveProjects took 0.1579ms
[debug] Load.apply: finalTransforms took 15.6533ms
[debug] Load.apply: config.delegates took 0.3842ms
[debug] Load.apply: Def.make(settings)... took 52.0381ms
[debug] Load.apply: structureIndex took 18.8407ms
[debug] Load.apply: mkStreams took 0.0031ms
[warn] Discarding 1 session setting.  Use 'session save' to persist session settings.
[info] set current project to Crypto (in build file:/C:/Users/pawel/Desktop/SCALA/Crypto/)
[warn] there's a key that's not used by any other settings/tasks:
[warn]  
[warn] * root / idePackagePrefix
[warn]   +- C:\Users\pawel\Desktop\SCALA\Crypto\build.sbt:8
[warn]  
[warn] note: a setting might still be used by a command; to exclude a key from this `lintUnused` check
[warn] either append it to `Global / excludeLintKeys` or call .withRank(KeyRanks.Invisible) on the key
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(idea-shell, None, None)
